AWSTemplateFormatVersion: "2010-09-09"

# VPCのテンプレート
Description: VPC and Subnet Create for lecture10


# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  NameBase:
    Description: this is base name
    Type: String
    Default: lecture10

  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.4.0/24


Resources: 
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
# VPC Create
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-vpc

# InternetGateway Create
  InternetGateway: 
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-igw

# IGW Attach
  VPCGatewayAttachment: 
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC 

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#          
# Public Subnet1 Create
  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnet1CIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-PublicSubnet1

# Public Subnet2 Create
  PublicSubnet2: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnet2CIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-PublicSubnet2

# Private Subnet1 Create
  PrivateSubnet1: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PrivateSubnet1CIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-PrivateSubnet1

# Private Subnet2 Create
  PrivateSubnet2: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PrivateSubnet2CIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-PrivateSubnet2

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#          
# Public RouteTable Create
  PublicRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-PublicRoute

# ------------------------------------------------------------#
# Routing
# ------------------------------------------------------------# 
# PublicRoute Create
  PublicRoute: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
# PublicRouteTable Associate Subnet1
  PublicSubnetARouteTableAssociation: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PublicSubnet1 
      RouteTableId: !Ref PublicRouteTable

# PublicRouteTable Associate Subnet2
  PublicSubnetCRouteTableAssociation: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PublicSubnet2 
      RouteTableId: !Ref PublicRouteTable


# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#                
Outputs:
# VPC
  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPCid

# Subnet
  PublicSubnet1:
    Description: PublicSubnet1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetid1

  PublicSubnet2:
    Description: PublicSubnet2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetid2

  PrivateSubnet1:
    Description: PrivateSubnet1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetid1

  PrivateSubnet2:
    Description: PrivateSubnet2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetid2
